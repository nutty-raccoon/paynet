syntax = "proto3";

package signer;

import "bdhke.proto";

service Signer {
  rpc DeclareKeyset (DeclareKeysetRequest) returns (DeclareKeysetResponse);
  rpc SignBlindedMessages (SignBlindedMessagesRequest) returns (SignBlindedMessagesResponse);
  rpc VerifyProofs (VerifyProofsRequest) returns (VerifyProofsResponse);
  rpc GetRootPubKey (GetRootPubKeyRequest) returns (GetRootPubKeyResponse);
}

message GetRootPubKeyRequest {}

message GetRootPubKeyResponse {
  string root_pubkey = 1;
}

message DeclareKeysetRequest {
  string unit = 1;
  uint32 index = 2;
  uint32 max_order = 3;
}

message DeclareKeysetResponse {
  bytes keyset_id = 1;
  repeated Key keys = 2;
}

message Key {
  uint64 amount = 1;
  string pubkey = 2;
}

message SignBlindedMessagesRequest {
  repeated bdhke.BlindedMessage messages = 1;
}

message SignBlindedMessagesResponse {
  repeated bytes signatures = 1;
}

message VerifyProofsRequest {
  repeated bdhke.Proof proofs = 1;
}

message VerifyProofsResponse {
  bool is_valid = 1; 
}

