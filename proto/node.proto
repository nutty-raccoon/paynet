syntax = "proto3";

package node;

import "bdhke.proto";

service Node {
  // Keyset
  rpc Keysets (GetKeysetsRequest) returns (GetKeysetsResponse);
  // Keys
  rpc Keys (GetKeysRequest) returns (GetKeysResponse);
  // Swap
  rpc Swap (SwapRequest) returns (SwapResponse);
  // Mint
  rpc MintQuote (MintQuoteRequest) returns (MintQuoteResponse);
  rpc Mint (MintRequest) returns (MintResponse);
  rpc MintQuoteState (QuoteStateRequest) returns (MintQuoteResponse);
  
  // Melt 
  rpc MeltQuote (MeltQuoteRequest) returns (MeltQuoteResponse);
  rpc MeltQuoteState (MeltQuoteStateRequest) returns (MeltQuoteResponse);
  rpc Melt (MeltRequest) returns (MeltResponse);
  
  rpc GetNodeInfo (GetNodeInfoRequest) returns (NodeInfoResponse);
  
  rpc Acknowledge (AcknowledgeRequest) returns (AcknowledgeResponse);

  // NUT07
  rpc CheckState (CheckStateRequest) returns (CheckStateResponse);

  rpc Restore (RestoreRequest) returns (RestoreResponse);
}

message GetNodeInfoRequest {} 

message NodeInfoResponse {
  string info = 1;
}

message GetKeysetsRequest {}

message GetKeysetsResponse {
  repeated Keyset keysets = 1;
}

message Keyset {
  bytes id = 1;
  string unit = 2;
  bool active = 3;
}

message GetKeysRequest {
  optional bytes keyset_id = 1;
}

message GetKeysResponse {
  repeated KeysetKeys keysets = 1;
}

message KeysetKeys {
  bytes id = 1;
  string unit = 2;
  bool active = 3;
  repeated Key keys = 4;
}

message Key {
  uint64 amount = 1;
  string pubkey = 2;
}

message MintQuoteRequest {
  string method = 1;
  uint64 amount = 2;
  string unit = 3;
  optional string description = 4; 
}

message MintQuoteResponse {
  string quote = 1;
  string request = 2;
  MintQuoteState state = 3; 
  uint64 expiry = 4;
}

enum MintQuoteState {
  MNQS_UNSPECIFIED = 0;
  MNQS_UNPAID = 1;
  MNQS_PAID = 2;
  MNQS_ISSUED = 3;
}

message MintRequest {
  string method = 1;
  string quote = 2;
  repeated bdhke.BlindedMessage outputs = 3;
}

message QuoteStateRequest {
  string method = 1;
  string quote = 2;
}

message MintResponse {
  repeated bdhke.BlindSignature signatures = 1;
}

message MeltQuoteRequest {
  string method = 1;
  string unit = 2;
  string request = 3;
}

message MeltQuoteResponse {
  string quote = 1;
  uint64 amount = 2;
  string unit = 3;
  MeltQuoteState state = 4;
  uint64 expiry = 5;
  repeated string transfer_ids = 6;
}

message MeltQuoteStateRequest {
  string method = 1;
  string quote = 2;
}

enum MeltQuoteState {
  MLQS_UNSPECIFIED = 0;
  MLQS_UNPAID = 1;
  MLQS_PENDING = 2;
  MLQS_PAID = 3;
}

message MeltRequest {
  string method = 1;
  string quote = 2;  
  repeated bdhke.Proof inputs = 3;
}

message MeltResponse {
  MeltQuoteState state = 1;
  repeated string transfer_ids = 2;
}

message SwapRequest {
  repeated bdhke.Proof inputs = 1;
  repeated bdhke.BlindedMessage outputs = 2;
}

message SwapResponse {
  repeated bdhke.BlindSignature signatures = 1;
}

message AcknowledgeRequest {
  string path = 1;
  uint64 request_hash = 2;
}

message AcknowledgeResponse {}

message RestoreRequest {
  repeated bdhke.BlindedMessage outputs = 1;
}

message RestoreResponse {
  repeated bdhke.BlindedMessage outputs = 1;
  repeated bdhke.BlindSignature signatures = 2;
}

message CheckStateRequest {
  repeated bytes ys = 1;
}

enum ProofState {
  PS_UNSPECIFIED = 0;
  PS_UNSPENT = 1;
  PS_PENDING = 2;
  PS_SPENT = 3;
}

message ProofCheckState {
  bytes Y = 1;
  ProofState state = 2;
}
message CheckStateResponse {
  repeated ProofCheckState states = 1;
}
