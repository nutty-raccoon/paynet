name: Descktop release

on:
  push:
    tags:
      - 'desktop-app-v*'

concurrency:
  group: desktop-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: '--target aarch64-apple-darwin'
          # - platform: macos-latest
          #   args: '--target x86_64-apple-darwin'
          # - platform: ubuntu-latest
          #   args: '--bundles appimage,deb,rpm'

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import GPG Private Key
        if: matrix.platform == 'ubuntu-latest' 
        run: |
          echo ${{ secrets.GPG_PRIVATE_KEY }} | gpg --import --batch --yes --passphrase="${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}"

      - name: Download appleconnect Private Key
        if: matrix.platform == 'macos-latest' 
        run: |
          mkdir -p ~/.appstoreconnect/private_keys/
          echo ${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY_BASE64 }} | base64 -d >> ~/.appstoreconnect/private_keys/AuthKey_${{ vars.APPSTORE_API_KEY_ID }}.p8         

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@1.86.0
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
          
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          version: "28.x"

      - name: Restore Rust cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            mobile/target/
          key: ${{ matrix.platform }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.platform }}-cargo-

      - name: Install system dependencies
        if: matrix.platform == 'ubuntu-latest' 
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libwebkit2gtk-4.1-dev patchelf gnupg2
          version: 1.0

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest' 
        run: |
          sudo apt-get update
          sudo apt-get install -y 

      - name: Install dependencies
        working-directory: mobile/salto
        run: bun install --frozen-lockfile

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0.5.23
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRICE_PROVIDER_URL: https://price-provider.mobile.tdelabro.com
          WEB_APP_URL: https://invoice-payment.tdelabro.com
          # macos signing
          APPLE_CERTIFICATE: ${{ secrets.APPLE_DEVELOPER_ID_APPLICATION_CERTIFICATE_FILE_BASE64 }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_DEVELOPER_ID_APPLICATION_CERTIFICATE_PASSWORD }}
          # macos notarization
          APPLE_API_ISSUER: ${{ vars.APPSTORE_ISSUER_ID }}
          APPLE_API_KEY: ${{ vars.APPSTORE_API_KEY_ID }}
          # appimage signing
          SIGN: 1
          APPIMAGETOOL_FORCE_SIGN: 1
          SIGN_KEY: ${{ secrets.GPG_KEY_ID }} 
          APPIMAGETOOL_SIGN_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }} 
        with:
          projectPath: mobile/salto
          # Release options
          tagName: desktop-app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Save Rust cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            mobile/target/
          key: ${{ matrix.platform }}-cargo-${{ hashFiles('**/Cargo.lock') }}
