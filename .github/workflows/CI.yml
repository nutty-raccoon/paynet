name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  ROOT_KEY: tprv8ZgxMBicQKsPeb6rodrmEXb1zRucvxYJgTKDhqQkZtbz8eY4Pf2EgbsT2swBXnnbDPQChQeFrFqHN72yFxzKfFAVsHdPeRWq2xqyUT2c4wH
  SIGNER_GRPC_PORT: 10001
  NODE_GRPC_PORT: 20001
  # For node
  PG_URL: postgres://postgres:password@localhost:5432/node
  SIGNER_URL: http://localhost:10001

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: node
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.85.0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
          # Only save on main branch to avoid polluting the cache with PR-specific artifacts
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: arduino/setup-protoc@v3
        with:
          version: "28.x"

      - name: Cargo check
        run: |
          cargo check

      - name: Build
        run: |
          # Bins
          cargo build -p node --all-targets --all-features
          cargo build -p signer --all-targets --all-features
          cargo build -p cli-wallet --all-targets --all-features
          cargo build -p starknet-cashier --all-targets --all-features
          cargo build -p starknet-on-chain-setup --all-targets --all-features
          # Libs
          cargo build -p starknet-payment-indexer --all-targets --all-features
          cargo build -p db-node --all-targets --all-features
          cargo build -p nuts --all-targets --all-features
          cargo build -p starknet-types --all-targets --all-features
          cargo build -p wallet --all-targets --all-features

      - name: Run unit tests
        run: |
          cargo test -p node --all-targets --all-features
          cargo test -p signer --all-targets --all-features
          cargo test -p cli-wallet --all-targets --all-features
          cargo test -p starknet-cashier --all-targets --all-features
          cargo test -p starknet-on-chain-setup --all-targets --all-features
          cargo test -p starknet-payment-indexer --all-targets --all-features
          cargo test -p db-node --all-targets --all-features
          cargo test -p nuts --all-targets --all-features
          cargo test -p starknet-types --all-targets --all-features
          cargo test -p wallet --all-targets --all-features

      - name: Run signer integration tests
        run: |
          cargo build -p signer --bin signer
          GRPC_PORT=$SIGNER_GRPC_PORT cargo run -p signer --bin signer &
          SIGNER_RUN_PID=$!
          while ! echo exit | nc localhost $SIGNER_GRPC_PORT; do sleep 1; done
          GRPC_PORT=$SIGNER_GRPC_PORT cargo test -p signer-tests
          kill $SIGNER_RUN_PID

      - name: Run node integration tests (with signer)
        run: |
          cargo build -p signer --bin signer
          GRPC_PORT=$SIGNER_GRPC_PORT cargo run -p signer --bin signer &
          SIGNER_RUN_PID=$!
          while ! echo exit | nc localhost $SIGNER_GRPC_PORT; do sleep 1; done
          cargo build -p node --no-default-features --bin node -- --config ./crates/bin/node/config/local.toml &
          GRPC_PORT=$NODE_GRPC_PORT cargo run -p node --no-default-features --bin node -- --config ./crates/bin/node/config/local.toml &
          NODE_RUN_PID=$!
          while ! echo exit | nc localhost $NODE_GRPC_PORT; do sleep 1; done
          GRPC_PORT=$NODE_GRPC_PORT cargo test -p node-tests
          kill $SIGNER_RUN_PID
          kill $NODE_RUN_PID

 
