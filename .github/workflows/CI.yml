name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  ROOT_KEY: tprv8ZgxMBicQKsPeb6rodrmEXb1zRucvxYJgTKDhqQkZtbz8eY4Pf2EgbsT2swBXnnbDPQChQeFrFqHN72yFxzKfFAVsHdPeRWq2xqyUT2c4wH
  SIGNER_GRPC_PORT: 10001
  NODE_GRPC_PORT: 20001
  # For node
  PG_URL: postgres://postgres:password@localhost:5432/node
  SIGNER_URL: http://localhost:10001

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: rustfmt, clippy
      - uses: arduino/setup-protoc@v3
        with:
          version: "28.x"
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy -- -D warnings

  test:
    name: Test
    strategy:
      matrix:
        include:
          - test_cmd: "cargo test -p node --no-default-features --features=mock,keyset-rotation,tls"
            cache_key: "node-mock-keyset-tls"
          - test_cmd: "cargo test -p node --no-default-features --features=starknet,keyset-rotation,tls"
            cache_key: "node-starknet-keyset-tls"
          - test_cmd: "cargo test -p signer --no-default-features"
            cache_key: "signer-default"
          - test_cmd: "cargo test -p cli-wallet --no-default-features"
            cache_key: "cli-wallet-default"
          - test_cmd: "cargo test -p cli-wallet --no-default-features --features=tls,tls-allow-self-signed"
            cache_key: "cli-wallet-tls"
          - test_cmd: "cargo test -p starknet-cashier --no-default-features"
            cache_key: "starknet-cashier-default"
          - test_cmd: "cargo test -p db-node --no-default-features"
            cache_key: "db-node-default"
          - test_cmd: "cargo test -p nuts --no-default-features"
            cache_key: "nuts-default"
          - test_cmd: "cargo test -p nuts --features=starknet,sqlx,nut19"
            cache_key: "nuts-starknet-sqlx-nut19"
          - test_cmd: "cargo test -p starknet-types --no-default-features"
            cache_key: "starknet-types-default"
          - test_cmd: "cargo test -p wallet --no-default-features"
            cache_key: "wallet-default"
          - test_cmd: "cargo test -p wallet --no-default-features --features=tls,tls-allow-self-signed"
            cache_key: "wallet-tls"
          - test_cmd: "cargo test -p liquidity-source --no-default-features"
            cache_key: "liquidity-source-default"
          - test_cmd: "cargo test -p liquidity-source --features=mock"
            cache_key: "liquidity-source-mock"
          - test_cmd: "cargo test -p starknet-on-chain-setup --no-default-features"
            cache_key: "starknet-on-chain-setup-default"
          - test_cmd: "cargo test -p starknet-payment-indexer --no-default-features"
            cache_key: "starknet-payment-indexer-default"
          - test_cmd: "cargo test -p starknet-liquidity-source --no-default-features"
            cache_key: "starknet-liquidity-source-default"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@1.86.0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ matrix.cache_key }}-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - uses: arduino/setup-protoc@v3
        with:
          version: "28.x"
      - name: Run test
        run: ${{ matrix.test_cmd }}


  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 'password'
          POSTGRES_DB: node
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@1.86.0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-integration-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - uses: arduino/setup-protoc@v3
        with:
          version: "28.x"
      - name: Build services for integration tests
        run: |
          cargo build -p signer --bin signer -p node --no-default-features --features=mock,keyset-rotation --bin node
          cargo test --no-run -p signer-tests
          cargo test --no-run -p node-tests
      - name: Run integration tests
        timeout-minutes: 1
        run: |
          # Signer
          GRPC_PORT=$SIGNER_GRPC_PORT ./target/debug/signer &
          SIGNER_RUN_PID=$!
          while ! echo exit | nc localhost $SIGNER_GRPC_PORT; do sleep 1; done
          GRPC_PORT=$SIGNER_GRPC_PORT cargo test -p signer-tests
          # Node
          GRPC_PORT=$NODE_GRPC_PORT ./target/debug/node --config ./crates/bin/node/config/local.toml &
          NODE_RUN_PID=$!
          while ! echo exit | nc localhost $NODE_GRPC_PORT; do sleep 1; done
          GRPC_PORT=$NODE_GRPC_PORT cargo test -p node-tests
          # Cleanup
          kill $SIGNER_RUN_PID
          kill $NODE_RUN_PID
